/*
JVM（Java虚拟机）的 RTDA（Run-time Data Area）是指在程序运行时分配给Java应用程序使用的内存区域，它包含了几个重要的组成部分。

1.程序计数器（Program Counter Register）：程序计数器是一块较小的内存区域，它保存着当前线程所执行的字节码指令的地址或索引。每个线程都有自己独立的程序计数器，用于记录线程执行的位置，以便线程切换后能够恢复执行。

2.Java虚拟机栈（Java Virtual Machine Stacks）：每个线程在创建时都会分配一个对应的Java虚拟机栈，用于存储局部变量、方法参数、动态链接信息和方法返回值等数据。每个方法在执行时会创建一个栈帧（Stack Frame），栈帧用于存储方法的局部变量和操作数栈等信息。

3.本地方法栈（Native Method Stack）：本地方法栈与Java虚拟机栈类似，但是它为本地方法（即用其他语言编写的方法）服务。本地方法栈也会为本地方法的调用和执行提供内存空间。

4.Java堆（Java Heap）：Java堆是Java虚拟机管理的最大的一块内存区域，用于存储对象实例和数组数据。几乎所有的对象都在Java堆上分配内存，垃圾收集器也主要针对Java堆进行垃圾回收。

5.方法区（Method Area）：方法区是存储类的结构信息、常量池、字段和方法的字节码等数据的内存区域。它包括运行时常量池，用于存放编译期生成的各种字面量和符号引用。

RTDA是JVM在运行时为Java应用程序提供的数据区域，每个线程都有自己的私有数据区域（程序计数器、虚拟机栈和本地方法栈），而Java堆和方法区则是所有线程共享的。这些区域的组合提供了Java程序运行所需的内存空间。

*/
package haidnor.jvm.rtda;